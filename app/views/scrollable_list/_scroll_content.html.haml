- if (local_variables.include?(:list_object))
  - page_items     = list_object_class_name.to_s.pluralize.classify.constantize.index_sort.page(1)
  - current_item   = list_object
  - param_page     = 1
  - per_page_model = list_object_class_name.to_s.pluralize.classify.constantize.default_per_page
  - param_per_page = nil
  - search_text    = nil
- else
  - page_items     = @current_page
  - current_item   = @selected_item
  - param_page     = @_controller.params[:page]
  - param_per_page = @_controller.params[:per_page]
  - per_page_model = @model_per_page
  - search_text    = @_controller.params[:search]

- prev_element = scrolling_list_previous_link(page_items, current_item, param_page, param_per_page, per_page_model,
search_text)
- unless (prev_element.blank?)
  - prev_link = prev_element.match(/href=\"(.*?)\"/)[1];
- next_element = scrolling_list_next_link(page_items, current_item, param_page, param_per_page, per_page_model,
search_text)
- unless (next_element.blank?)
  - next_link = next_element.match(/href=\"(.*?)\"/)[1];
- unless prev_element.blank?
  .scrolling-previous
    = prev_element

- page_items.each do |page_item|
  = scrolling_list_link_to_item("#{scroll_list_name(page_item)}", page_item, page_items, current_item, param_page,
  param_per_page, per_page_model, search_text)

-#= scrolling_list_page_break prev_link, next_link

- unless next_element.blank?
  .scrolling-next
    = next_element